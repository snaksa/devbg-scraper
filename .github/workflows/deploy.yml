name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BACKEND_URL: ${{ secrets.BACKEND_URL }}
      CERTIFICATE_ARN: ${{ secrets.CERTIFICATE_ARN }}
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # Create frontend out dir because CDK tries to synth all stacks even though we are deploying only a given list of stacks.
      # At this point the out directory is not generated yet.
      - run: mkdir frontend/out

      # Deploy Backend related resources
      - run: rm backend/.env && echo DOMAIN_NAME=$DOMAIN_NAME$"\n"HOSTED_ZONE_ID=$HOSTED_ZONE_ID > backend/.env
      - run: cat backend/.env
      - run: npm install --prefix backend
      - run: npm run --prefix backend cdk deploy "DevbgStorageStack" "DevbgScraperStack" "DevbgApiStack" -- --require-approval never --outputs-file "outputs.json"

      # Build Frontend application
      - run: rm frontend/.env
      - run: npm install --prefix frontend
      # Generate .env file containing the API URL
      - run: npm run generate-envs --prefix frontend
      - run: npm run build --prefix frontend

      # Deploy Frontend related resources
      - run: npm run --prefix backend cdk deploy "DevbgFrontendStack" -- --require-approval never